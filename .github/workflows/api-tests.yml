# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # Step 5: Set up and prepare database for pytest
    # Add any commands required to prepare the database (e.g., creating schemas/migrations)
    # - name: Prepare database
    #   env:
    #     DATABASE_URI: 'sqlite:///:memory:'
    #   run: |
    #     echo "Running database migrations (if applicable)"
    #     python -c "from db import Base, engine; Base.metadata.create_all(bind=engine)"

    # Step 6: Run tests with pytest
    - name: Test with pytest
      # env:
      #   DATABASE_URI: 'sqlite:///:memory:'
      run: |
        pytest -s ./estate-sentry-api/
